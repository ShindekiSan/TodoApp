{"ast":null,"code":"var _jsxFileName = \"D:\\\\frontend projects\\\\reactapp\\\\react-todo-app\\\\src\\\\components\\\\TodoForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction TodoForm() {\n  _s();\n\n  const [input, setInput] = useState('');\n  const [todoId, setTodoId] = useState(0);\n  const [todos, setTodos] = useState([]);\n\n  const addTodo = todo => {\n    if (todo.text || /^\\s*$/.test(todo.text)) {\n      return;\n    }\n\n    setTodos(todos.concat(todo));\n    console.log(todos);\n  };\n\n  const handleChange = e => {\n    setInput(e.target.value);\n  };\n\n  const handleClick = e => {\n    const newTodo = {\n      id: setTodoId(todoId + 1),\n      text: input\n    };\n    addTodo(newTodo);\n    console.log(e.type);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setInput('');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"tasks\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"task-form\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Your task\",\n        value: input,\n        className: \"task-input\",\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"task-input__add-button\",\n        onClick: handleClick,\n        children: \"Add to list\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n}\n\n_s(TodoForm, \"g4utmK321G5vjj4/wDMPRyVMUTU=\");\n\n_c = TodoForm;\nexport default TodoForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoForm\");","map":{"version":3,"sources":["D:/frontend projects/reactapp/react-todo-app/src/components/TodoForm.js"],"names":["React","useState","TodoForm","input","setInput","todoId","setTodoId","todos","setTodos","addTodo","todo","text","test","concat","console","log","handleChange","e","target","value","handleClick","newTodo","id","type","handleSubmit","preventDefault"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AAEA,SAASC,QAAT,GAAoB;AAAA;;AAChB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBH,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACI,MAAD,EAASC,SAAT,IAAsBL,QAAQ,CAAC,CAAD,CAApC;AACA,QAAM,CAACM,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,EAAD,CAAlC;;AAEA,QAAMQ,OAAO,GAAGC,IAAI,IAAI;AACpB,QAAGA,IAAI,CAACC,IAAL,IAAa,QAAQC,IAAR,CAAaF,IAAI,CAACC,IAAlB,CAAhB,EAAyC;AACrC;AACH;;AAEDH,IAAAA,QAAQ,CAACD,KAAK,CAACM,MAAN,CAAaH,IAAb,CAAD,CAAR;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAYR,KAAZ;AACH,GAPD;;AASA,QAAMS,YAAY,GAAGC,CAAC,IAAI;AACtBb,IAAAA,QAAQ,CAACa,CAAC,CAACC,MAAF,CAASC,KAAV,CAAR;AACH,GAFD;;AAIA,QAAMC,WAAW,GAAGH,CAAC,IAAI;AACrB,UAAMI,OAAO,GAAG;AACZC,MAAAA,EAAE,EAAEhB,SAAS,CAACD,MAAM,GAAC,CAAR,CADD;AAEZM,MAAAA,IAAI,EAAER;AAFM,KAAhB;AAKAM,IAAAA,OAAO,CAACY,OAAD,CAAP;AACAP,IAAAA,OAAO,CAACC,GAAR,CAAYE,CAAC,CAACM,IAAd;AACH,GARD;;AAUA,QAAMC,YAAY,GAAGP,CAAC,IAAI;AACtBA,IAAAA,CAAC,CAACQ,cAAF;AAEArB,IAAAA,QAAQ,CAAC,EAAD,CAAR;AACH,GAJD;;AAMA,sBACI;AAAS,IAAA,SAAS,EAAC,OAAnB;AAAA,2BACI;AAAM,MAAA,SAAS,EAAC,WAAhB;AAA4B,MAAA,QAAQ,EAAEoB,YAAtC;AAAA,8BACI;AACI,QAAA,IAAI,EAAC,MADT;AAEI,QAAA,WAAW,EAAC,WAFhB;AAGI,QAAA,KAAK,EAAErB,KAHX;AAII,QAAA,SAAS,EAAC,YAJd;AAKI,QAAA,QAAQ,EAAEa;AALd;AAAA;AAAA;AAAA;AAAA,cADJ,eAQI;AAAQ,QAAA,SAAS,EAAC,wBAAlB;AAA2C,QAAA,OAAO,EAAEI,WAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAeH;;GAjDQlB,Q;;KAAAA,Q;AAmDT,eAAeA,QAAf","sourcesContent":["import React, { useState } from 'react'\r\n\r\nfunction TodoForm() {\r\n    const [input, setInput] = useState('');\r\n    const [todoId, setTodoId] = useState(0);\r\n    const [todos, setTodos] = useState([]);\r\n\r\n    const addTodo = todo => {\r\n        if(todo.text || /^\\s*$/.test(todo.text)) {\r\n            return\r\n        }\r\n\r\n        setTodos(todos.concat(todo));\r\n        console.log(todos);\r\n    }\r\n\r\n    const handleChange = e => {\r\n        setInput(e.target.value);\r\n    }\r\n\r\n    const handleClick = e => {\r\n        const newTodo = {\r\n            id: setTodoId(todoId+1),\r\n            text: input\r\n        };\r\n\r\n        addTodo(newTodo);\r\n        console.log(e.type)\r\n    }   \r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n    \r\n        setInput('');\r\n    }\r\n\r\n    return (\r\n        <section className='tasks'>\r\n            <form className='task-form' onSubmit={handleSubmit}>\r\n                <input \r\n                    type='text' \r\n                    placeholder='Your task' \r\n                    value={input} \r\n                    className='task-input' \r\n                    onChange={handleChange}\r\n                />\r\n                <button className='task-input__add-button' onClick={handleClick}>Add to list</button>\r\n            </form>\r\n        </section>\r\n    \r\n    )\r\n}\r\n\r\nexport default TodoForm"]},"metadata":{},"sourceType":"module"}