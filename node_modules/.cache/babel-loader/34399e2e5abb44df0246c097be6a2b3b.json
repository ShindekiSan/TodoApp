{"ast":null,"code":"var _jsxFileName = \"D:\\\\frontend projects\\\\reactapp\\\\react-todo-app\\\\src\\\\components\\\\TodoList.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport TodoForm from './TodoForm';\nimport Todo from './Todo';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction TodoList() {\n  _s();\n\n  const [todos, setTodos] = useState([]);\n  const [edit, setEdit] = useState({\n    id: null,\n    value: ''\n  });\n\n  const addTodo = todo => {\n    if (!todo.text || /^\\s*$/.test(todo.text)) {\n      return;\n    }\n\n    const newTodos = [todo, ...todos];\n    setTodos(newTodos);\n  };\n\n  const deleteTodo = id => {\n    const removeItem = todos.filter(todo => {\n      return todo.id !== id;\n    });\n    setTodos(removeItem);\n  };\n\n  const changeTodoState = id => {\n    const checkTodo = todos.map(todo => {\n      if (todo.id === id) {\n        todo.isComplete = !todo.isComplete;\n      }\n\n      return todo;\n    });\n    setTodos(checkTodo);\n  };\n\n  const updateTodo = (todoId, newValue) => {\n    if (!newValue.text || /^\\s*$/.test(newValue.text)) {\n      return;\n    }\n\n    setTodos(prev => prev.map(item => item.id === todoId ? newValue : item));\n  };\n\n  const submitUpdate = value => {\n    updateTodo(edit.id, value);\n    setEdit({\n      id: null,\n      value: ''\n    });\n  };\n\n  if (edit.id) {\n    return /*#__PURE__*/_jsxDEV(TodoForm, {\n      edit: edit,\n      onSubmit: submitUpdate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 16\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"todo-list\",\n    children: [/*#__PURE__*/_jsxDEV(TodoForm, {\n      onSubmit: addTodo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), todos.slice(0).reverse().map(todo => /*#__PURE__*/_jsxDEV(Todo, {\n      todo: todo,\n      onDeleteClick: () => deleteTodo(todo.id),\n      onChangeStateClick: () => changeTodoState(todo.id),\n      onEditClick: () => setEdit({\n        id: todo.id,\n        value: todo.text\n      })\n    }, todo.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 9\n  }, this);\n}\n\n_s(TodoList, \"Tei5PFJLzmzWVWdcQ/8wm7d7VHA=\");\n\n_c = TodoList;\nexport default TodoList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"sources":["D:/frontend projects/reactapp/react-todo-app/src/components/TodoList.jsx"],"names":["React","useState","TodoForm","Todo","TodoList","todos","setTodos","edit","setEdit","id","value","addTodo","todo","text","test","newTodos","deleteTodo","removeItem","filter","changeTodoState","checkTodo","map","isComplete","updateTodo","todoId","newValue","prev","item","submitUpdate","slice","reverse"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport TodoForm from './TodoForm';\r\nimport Todo from './Todo';\r\n\r\nfunction TodoList() {\r\n    const [todos, setTodos] = useState([])\r\n    const [edit, setEdit] = useState({\r\n        id: null,\r\n        value: ''\r\n    })\r\n\r\n    const addTodo = todo => {\r\n        if(!todo.text || /^\\s*$/.test(todo.text)) {\r\n            return\r\n        }\r\n\r\n        const newTodos = [todo, ...todos]\r\n\r\n        setTodos(newTodos);\r\n    }\r\n\r\n    const deleteTodo = id => {\r\n        const removeItem = todos.filter((todo) => {\r\n            return todo.id !== id;\r\n        });\r\n\r\n        setTodos(removeItem);\r\n    }\r\n\r\n    const changeTodoState = id => {\r\n        const checkTodo = todos.map((todo) => {\r\n            if (todo.id === id) {\r\n                todo.isComplete = !todo.isComplete\r\n            }\r\n            return todo\r\n        })\r\n        setTodos(checkTodo)\r\n    }\r\n\r\n    const updateTodo = (todoId, newValue) => {\r\n        if(!newValue.text || /^\\s*$/.test(newValue.text)) {\r\n            return\r\n        }\r\n\r\n        setTodos(prev => prev.map(item => (item.id === todoId ? newValue : item)));\r\n    }\r\n\r\n    const submitUpdate = value => {\r\n        updateTodo(edit.id, value)\r\n        setEdit({\r\n            id: null,\r\n            value: ''\r\n        })\r\n    }\r\n\r\n    if (edit.id) {\r\n        return <TodoForm edit={edit} onSubmit={submitUpdate} />\r\n    }\r\n\r\n    return (\r\n        <div className='todo-list'>\r\n            <TodoForm onSubmit={addTodo} />\r\n            {todos.slice(0).reverse().map(todo =>\r\n                <Todo \r\n                    todo={todo} \r\n                    key={todo.id} \r\n                    onDeleteClick={() => deleteTodo(todo.id)} \r\n                    onChangeStateClick={() => changeTodoState(todo.id)}\r\n                    onEditClick={() => setEdit({id: todo.id, value:todo.text})}\r\n                />\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TodoList"]},"metadata":{},"sourceType":"module"}