{"ast":null,"code":"var _jsxFileName = \"D:\\\\frontend projects\\\\reactapp\\\\react-todo-app\\\\src\\\\components\\\\Todo.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { AiOutlineCloseCircle, AiOutlineEdit } from 'react-icons/ai';\nimport { MdDone } from 'react-icons/md';\nimport { BiUndo } from 'react-icons/bi';\nimport TodoForm from \"./TodoForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Todo(props) {\n  _s();\n\n  const [edit, setEdit] = useState({\n    id: null,\n    value: ''\n  });\n\n  const submitUpdate = value => {\n    props.updateTodo(edit.id, value);\n    setEdit({\n      id: null,\n      value: ''\n    });\n  };\n\n  if (edit.id) {\n    return /*#__PURE__*/_jsxDEV(TodoForm, {\n      edit: edit,\n      onSubmit: submitUpdate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 16\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: props.todo.isComplete ? 'todo complete' : 'todo',\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"todo-text\",\n      children: props.todo.text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todo-buttons\",\n      children: [/*#__PURE__*/_jsxDEV(AiOutlineCloseCircle, {\n        className: \"todo__delete-button\",\n        onClick: props.onDeleteClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(AiOutlineEdit, {\n        className: props.todo.isComplete ? 'todo__edit-button disable' : 'todo__edit-button',\n        onClick: setEdit({\n          id: props.todo.id,\n          value: props.todo.text\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this), props.todo.isComplete ? /*#__PURE__*/_jsxDEV(BiUndo, {\n        className: \"todo__uncomplete-button\",\n        onClick: props.onChangeStateClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this) : /*#__PURE__*/_jsxDEV(MdDone, {\n        className: \"todo__complete-button\",\n        onClick: props.onChangeStateClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 100\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Todo, \"Lk+zX9mM8RlzHTP2VTuh+tHke4Q=\");\n\n_c = Todo;\nexport default Todo;\n\nvar _c;\n\n$RefreshReg$(_c, \"Todo\");","map":{"version":3,"sources":["D:/frontend projects/reactapp/react-todo-app/src/components/Todo.jsx"],"names":["React","useState","AiOutlineCloseCircle","AiOutlineEdit","MdDone","BiUndo","TodoForm","Todo","props","edit","setEdit","id","value","submitUpdate","updateTodo","todo","isComplete","text","onDeleteClick","onChangeStateClick"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,oBAAT,EAA+BC,aAA/B,QAAoD,gBAApD;AACA,SAASC,MAAT,QAAuB,gBAAvB;AACA,SAASC,MAAT,QAAuB,gBAAvB;AACA,OAAOC,QAAP,MAAqB,YAArB;;;AAEA,SAASC,IAAT,CAAcC,KAAd,EAAqB;AAAA;;AACjB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAAC;AAC7BU,IAAAA,EAAE,EAAE,IADyB;AAE7BC,IAAAA,KAAK,EAAE;AAFsB,GAAD,CAAhC;;AAKA,QAAMC,YAAY,GAAGD,KAAK,IAAI;AAC1BJ,IAAAA,KAAK,CAACM,UAAN,CAAiBL,IAAI,CAACE,EAAtB,EAA0BC,KAA1B;AACAF,IAAAA,OAAO,CAAC;AACJC,MAAAA,EAAE,EAAE,IADA;AAEJC,MAAAA,KAAK,EAAE;AAFH,KAAD,CAAP;AAIH,GAND;;AAQA,MAAIH,IAAI,CAACE,EAAT,EAAa;AACT,wBAAO,QAAC,QAAD;AAAU,MAAA,IAAI,EAAEF,IAAhB;AAAsB,MAAA,QAAQ,EAAEI;AAAhC;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;;AAED,sBACI;AAAK,IAAA,SAAS,EAAEL,KAAK,CAACO,IAAN,CAAWC,UAAX,GAAwB,eAAxB,GAA0C,MAA1D;AAAA,4BACI;AAAM,MAAA,SAAS,EAAC,WAAhB;AAAA,gBAA6BR,KAAK,CAACO,IAAN,CAAWE;AAAxC;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,8BACI,QAAC,oBAAD;AACI,QAAA,SAAS,EAAC,qBADd;AAEI,QAAA,OAAO,EAAET,KAAK,CAACU;AAFnB;AAAA;AAAA;AAAA;AAAA,cADJ,eAKI,QAAC,aAAD;AACI,QAAA,SAAS,EAAEV,KAAK,CAACO,IAAN,CAAWC,UAAX,GAAwB,2BAAxB,GAAsD,mBADrE;AAC0F,QAAA,OAAO,EAAEN,OAAO,CAAC;AAACC,UAAAA,EAAE,EAACH,KAAK,CAACO,IAAN,CAAWJ,EAAf;AAAmBC,UAAAA,KAAK,EAACJ,KAAK,CAACO,IAAN,CAAWE;AAApC,SAAD;AAD1G;AAAA;AAAA;AAAA;AAAA,cALJ,EAQKT,KAAK,CAACO,IAAN,CAAWC,UAAX,gBACD,QAAC,MAAD;AAAQ,QAAA,SAAS,EAAC,yBAAlB;AAA4C,QAAA,OAAO,EAAER,KAAK,CAACW;AAA3D;AAAA;AAAA;AAAA;AAAA,cADC,gBACkF,QAAC,MAAD;AAAQ,QAAA,SAAS,EAAC,uBAAlB;AAA0C,QAAA,OAAO,EAAEX,KAAK,CAACW;AAAzD;AAAA;AAAA;AAAA;AAAA,cATvF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAgBH;;GAlCQZ,I;;KAAAA,I;AAoCT,eAAeA,IAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport { AiOutlineCloseCircle, AiOutlineEdit } from 'react-icons/ai';\r\nimport { MdDone } from 'react-icons/md'\r\nimport { BiUndo } from 'react-icons/bi'\r\nimport TodoForm from \"./TodoForm\";\r\n\r\nfunction Todo(props) {\r\n    const [edit, setEdit] = useState({\r\n        id: null,\r\n        value: ''\r\n    })\r\n\r\n    const submitUpdate = value => {\r\n        props.updateTodo(edit.id, value)\r\n        setEdit({\r\n            id: null,\r\n            value: ''\r\n        })\r\n    }\r\n\r\n    if (edit.id) {\r\n        return <TodoForm edit={edit} onSubmit={submitUpdate} />\r\n    }\r\n\r\n    return (\r\n        <div className={props.todo.isComplete ? 'todo complete' : 'todo'}>\r\n            <span className='todo-text'>{props.todo.text}</span>\r\n            <div className='todo-buttons'>\r\n                <AiOutlineCloseCircle \r\n                    className='todo__delete-button'\r\n                    onClick={props.onDeleteClick}\r\n                />\r\n                <AiOutlineEdit \r\n                    className={props.todo.isComplete ? 'todo__edit-button disable' : 'todo__edit-button'} onClick={setEdit({id:props.todo.id, value:props.todo.text})}\r\n                />\r\n                {props.todo.isComplete ? \r\n                <BiUndo className='todo__uncomplete-button' onClick={props.onChangeStateClick}/> : <MdDone className='todo__complete-button' onClick={props.onChangeStateClick}/>}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Todo"]},"metadata":{},"sourceType":"module"}